IO = import "Io"

charToPrio(x) =>
	if x.charCode() < "a".charCode(): x.charCode() - "A".charCode() + 27
	else x.charCode() - "a".charCode() + 1

findShared1(rucksack) => {
	const half = #rucksack * 0.5
	const part1, part2 = rucksack.sub(1, half), rucksack.sub(half+1)
	for item in part1: if part2.contains(item): return item
}

findShared2 [r1, r2, r3] =>
	for item in r1: if r2.contains(item) and r3.contains(item): return item

f1() => IO.stdin.splitAt("\n")
	.map(line => findShared1 [...line])

f2() => IO.stdin.splitAt("\n")
	.groupBySize(3)
	.map(line => findShared2 [...line.map(x => [...x])])

yield f2()
	.map(charToPrio)
	.sum()
